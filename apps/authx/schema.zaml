schema: |-
  // Exported from permissions system orbisops Tutorial System (orbisops_tutorial) on Fri Oct 20 2023 12:07:32 GMT-0700 (Pacific Daylight Time)

  // Exported from permissions system orbisops Tutorial System (orbisops_tutorial) on Fri Oct 13 2023 10:41:41 GMT-0700 (Pacific Daylight Time)
  // Exported from permissions system orbisops Tutorial System (orbisops_tutorial) on Tue Oct 10 2023 10:45:35 GMT-0400 (Eastern Daylight Time)
  definition orbisops_tutorial/data_service {
  	relation platform: orbisops_tutorial/platform
  	relation owner: orbisops_tutorial/user
  	relation parent: orbisops_tutorial/organization

  	// allow list is the explicit relationship between orgs and data
  	// for groups, the caveat is for group membership in an organization
  	relation allow_list: orbisops_tutorial/organization with orbisops_tutorial/is_partnered_organization | orbisops_tutorial/group with orbisops_tutorial/is_member_of_partner_organization
  	permission data_service_edit = owner + parent->data_service_create
  	permission data_service_read = owner + parent->organization_membership + allow_list->organization_membership + allow_list->group_membership
  }

  definition orbisops_tutorial/group {
  	relation organization: orbisops_tutorial/organization
  	relation owner: orbisops_tutorial/user
  	relation admin: orbisops_tutorial/user
  	relation member: orbisops_tutorial/user | orbisops_tutorial/user with orbisops_tutorial/is_member_of_partner_organization
  	relation service_account: orbisops_tutorial/service_account | orbisops_tutorial/user with orbisops_tutorial/is_member_of_partner_organization

  	// relation group: orbisops_tutorial/group
  	// group
  	permission group_membership = owner + admin + member + service_account
  	permission group_edit_owner = admin + owner
  	permission group_edit_admin = owner + admin
  	permission group_edit = owner + admin
  	permission group_read = group_edit + member
  }

  definition orbisops_tutorial/organization {
  	relation platform: orbisops_tutorial/platform
  	relation owner: orbisops_tutorial/user
  	relation admin: orbisops_tutorial/user
  	relation member: orbisops_tutorial/user
  	relation service_account: orbisops_tutorial/service_account

  	// below we only have one partnered organization relation which can be used N times
  	// will have to assemble the N org_ids for use with the caveats
  	relation partnered_organization: orbisops_tutorial/organization
  	relation data_service: orbisops_tutorial/data_service

  	// org
  	permission organization_membership = owner + admin + member + service_account
  	permission organization_edit_owner = platform->platform_update + owner
  	permission organization_edit_admin = owner + admin
  	permission organization_edit = owner + admin
  	permission organization_read = platform->platform_read + organization_edit + member

  	// partners
  	permission organization_edit_partners = owner + admin
  	permission organization_read_partners = organization_edit_partners + member
  	permission organization_read_name = partnered_organization->organization_read_partners

  	// service accounts
  	permission service_account_edit = owner + admin

  	// data and backend services
  	permission data_service_create = owner + admin + member
  	permission data_service_read = data_service_create + partnered_organization->organization_read_partners
  }

  definition orbisops_tutorial/platform {
  	relation owner: orbisops_tutorial/user
  	relation admin: orbisops_tutorial/user
  	permission platform_update = owner + admin
  	permission platform_read = owner + admin
  }

  definition orbisops_tutorial/service_account {
  	relation platform: orbisops_tutorial/platform
  	relation owner: orbisops_tutorial/organization
  	permission sa_read_name = platform->platform_read + owner->organization_read
  	permission sa_read_details = owner->organization_update
  }

  definition orbisops_tutorial/user {}

  caveat orbisops_tutorial/is_member_of_partner_organization(org_id string, user_org_partners list<string>) {
  	org_id in user_org_partners
  }

  caveat orbisops_tutorial/is_partnered_organization(org_id string, org_partners list<string>) {
  	org_id in org_partners
  }